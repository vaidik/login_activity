<?php

/**
 * Implementation of hook_help.
 */
function login_activity_help($path, $arg) {
  $output = '';

  if ($path == 'admin/help#login_activity') {
    $output .= 'This module logs login activity of every user on your Drupal installation. Everytime a user logs in to your website, the login activity is logged in the database. The module logs the following information:';
    $output .= '<ul>';
      $output .= '<li>UID of the user.</li>';
      $output .= '<li>$_SERVER[\'HTTP_USER_AGENT\'] string.</li>';
      $output .= '<li>Hostname (IP address) of the user.</li>';
      $output .= '<li>UNIX timestamp.</li>';
    $output .= '</ul>';
  }

  return $output;
}

/**
 * Implemetation of hook_user_login.
 */
function login_activity_user_login(&$edit, $account) {
  $query = db_insert('login_activity');
  $query->fields(array(
    'uid' => $account->uid,
    'host_user_agent' => $_SERVER['HTTP_USER_AGENT'],
    'hostname' => $_SERVER['REMOTE_ADDR'],
    'timestamp' => time(),
  ));

  $query->execute();
}

/**
 * Implementation of hook_permission.
 */
function login_activity_permission() {
  return array(
    'view own login activity' => array(
      'title' => t('View own login activity'),
      'description' => t('Allow user to view login activity of own account.'),
    ),
    'administer login activity' => array(
      'title' => t('Administer login activity'),
      'description' => t('Change configurations of this module. View login activity of other users.'),
    ),
  );
}

/**
 * Implementation of hook_menu.
 */
function login_activity_menu() {
  $menu = array();

  $menu['user/%/login_activity'] = array(
    'title' => t('Account Activity'),
    'description' => t('This page provides information about previous activities on the logged in account.'),
    'page callback' => 'login_activity_view_user_activity',
    'page arguments' => array(1),
    'access callback' => 'user_access',
    'access arguments' => array('view own login activity'),
    'type' => MENU_LOCAL_TASK,
  );

  return $menu;
}

/**
 * Page callback for viewing user-specific login activity.
 */
function login_activity_view_user_activity($uid = NULL) {
  $output = '';

  if (!$uid) {
    return FALSE;
  }

  global $user;
  if ($uid != $user->uid && !user_access('administer login activity')) {
    drupal_set_message(t('Access denied.'), 'error');
    
    //In most general case, a user without admin rights for login_activity will be a general site user. Therefore, the user's name (global $user->name) is the best page title for the purpose.
    drupal_set_title($user->name);
    return t('You don\'t have rights to get details of other users.');
  }

  if (!user_load($uid)) {
    drupal_set_message(t('User does not exist.'), 'error');
    drupal_set_title(t('Login Activity'));
    return t('This user does not exist. Make sure that you are providing the correct UID.');
  }

  $variables = array();

  $variables['header'] = array(
    array(
      'data' => t('Date & Time'),
      'field' => 'timestamp',
      'sort' => 'desc',
    ),
    array(
      'data' => t('IP Address'),
      'field' => 'hostname',
    ),
    t('HTTP User Agent'),
  );
  
  $query = db_select('login_activity', 'l');
  $query->condition('l.uid', $uid, '=')
        ->fields('l', array('host_user_agent', 'hostname', 'timestamp'))
        ->range(0, 20)
        ->extend('TableSort')
        ->orderByHeader($variables['header']);

  $result = $query->execute();

  foreach($result as $row) {
    $variables['rows'][] = array(
      'data' => array(
        format_date($row->timestamp, 'long'),
        $row->hostname,
        $row->host_user_agent,
      ),
    );
  }
  
  $output = theme('table', $variables);

  return $output;
}
